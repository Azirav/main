-- This file was generated using Luraph Obfuscator v13.5.6

return(function(yV,iV,NV,sV,IV,ZV,mV,BV,KV,vV,hV,zV,uV,PV,QV,HV,dV,qV,SV,FV,JV,nV,RV,MV,cV,wV,LV,WV,jV,V,...)local p,c=nil,(nil);local DV=(1);while DV<2 do if DV~=0X0 then do p=ZV;end;DV=0X0;else c=1;DV=0x2;continue;end;end;local l,Y,P,k,a,i,U,x,Z,q,H=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;for vk=0,10 do do if not(vk<=4)then do if vk<=0X7 then do if vk<=5 then i=string.match;continue;else if vk~=0X00006 then do x=HV.band;end;do continue;end;else U=mV;continue;end;end;end;else if vk<=8 then Z=yV;continue;else if vk~=0x0009 then H=table.insert;do continue;end;else q=LV.gsub;do continue;end;end;end;end;end;elseif vk<=1 then if vk~=0x0 then Y=qV;else l=vV;continue;end;else do if vk<=0X2 then P=0X80000000;continue;else if vk==0X03 then k=iV;continue;else do a=HV.lshift;end;do continue;end;end;end;end;end;end;end;local y,W,o=rawget,WV,(LV.byte);DV=2;local z,h,K,S=nil,nil,nil,nil;while DV~=4 do if not(DV<=1)then if DV~=2 then h=coroutine.yield;do DV=0X0;end;else z=4294967296;DV=0X3;end;else do if DV~=0 then do S=sV;end;DV=0X4;else K=LV.unpack;DV=1;do continue;end;end;end;end;end;local F=S();local v=(hV);local{[0X0]=1};DV=0x1;local t,Q=nil,(nil);while DV<0x002 do if DV==0x0000 then DV=0X2;else t={[RV]=KV,[0X7]=jV,[8]="\084",[0X6]="",[9]='Y\R0\q',[0x5]=false,[0X00004]=false,[0X0]=-0X00050667bc,[6]=-1177952249,[0X0]=0X4,[1]=0X2,[nV]=1440391239,[6]=KV,[0X4]=1,[8]=0X07,[0x00009]=SV,[0X005]=RV,[0X0]=3,[0x7]=0x3,[0X00001]=7,[6]=0,[6]=0x05,[0X008]=3};do DV=0x0000;end;end;end;I=q(U(I,5),"..",function(fu)do if o(fu,2)~=72 then local Cd=(nil);for sq=0X0,1 do if sq~=0X0 then if not(Q)then do return Cd;end;else local CA=(nil);local SA=2;repeat if SA<=0 then do return CA;end;else do if SA~=1 then CA=v(Cd,Q);SA=1;continue;else do Q=nil;end;SA=0;continue;end;end;end;until false;end;do continue;end;else Cd=Z(Y(fu,0x10));end;end;else for se=0x0,0x01 do if se~=0 then return FV;else Q=Y(U(fu,1,0X0001));continue;end;end;end;end;end);local N=(function()local aJ=(o(I,c,c));for FR=0,1 do if FR==0X000 then c=c+1;continue;else return aJ;end;end;end);local j=setfenv;local R,m=unpack,(setmetatable);local u,J=nil,nil;do for ei=0X0,0X0001 do if ei==0 then do u=2^0X34;end;else J=function()local PZ,YZ=K('<\073\052',I,c);c=YZ;return PZ;end;continue;end;end;end;local g,w=error,P-0X00001;DV=0X01;local lV,G,D=nil,nil,nil;repeat do if DV<=0X1 then do if DV~=0X0 then lV={};DV=3;else D=function()local vB,uB=nil,nil;local GB=(0);repeat do if GB<=0 then vB,uB=K('<\1058',I,c);GB=0X01;else do if GB~=0X1 then return vB;else c=uB;do GB=0X0002;end;do continue;end;end;end;end;end;until false;end;DV=4;do continue;end;end;end;else if DV~=2 then do G=cV;end;DV=2;continue;else do local Am=nil;local qm=(1);while qm<=1 do if qm~=0X0000 then Am=0X2;qm=0x0000;else do for pm=0X1,31 do local Gm=(0X00001);while Gm~=0x2 do do if Gm~=0 then do B[pm]=Am;end;Gm=0X0;continue;else Am=Am*2;do Gm=0X2;end;continue;end;end;end;end;end;qm=2;do continue;end;end;end;end;do DV=0;end;end;end;end;until DV>=0x4;local d=z-0x1;DV=0X00001;local T,s,f,A,e,M,r=nil,nil,nil,nil,nil,nil,(nil);while DV<0X007 do if DV<=0X2 then do if not(DV<=0X000)then do if DV==1 then T=IV;DV=0X2;continue;else s=QV;DV=0X6;end;end;else M=function(a9,q9,L9)local m9=((a9/B[q9])%B[L9]);m9=m9-m9%0x1;do return m9;end;end;do DV=3;end;end;end;else if not(DV<=4)then if DV==0X5 then e=function()local tU,DU=K("<d",I,c);local QU=0X0;repeat if QU==0 then c=DU;QU=1;else return tU;end;until(false);end;do DV=0;end;continue;else f=HV.bnot;do DV=0X4;end;do continue;end;end;elseif DV~=0X3 then A=NV;do DV=5;end;else r=function()local ir=(0);local Sr=(0X0000);while true do local rQ=(o(I,c,c));do c=c+1;end;Sr=G(Sr,a(x(rQ,127),ir));if x(rQ,128)==0 then return Sr;end;ir=ir+7;end;end;do DV=7;end;end;end;end;local X,O,L,VV,C=nil,nil,nil,nil,nil;do for lZ=0,0X4 do if not(lZ<=1)then if lZ<=2 then do L=PV;end;else if lZ==0X3 then do VV=N();end;else C=function()local zQ=(nil);do for jS=0,1 do do if jS==0 then do zQ=r();end;continue;else if not(zQ>w)then else return zQ-z;end;end;end;end;end;return zQ;end;continue;end;end;else do if lZ==0X0 then X=JV;else O=N();end;end;end;end;end;DV=0X00a;local bV,kV,b,E,YV,XV,pV,gV,UV,oV=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat if DV<=6 then do if DV<=2 then do if not(DV<=0)then do if DV==1 then do DV=4;end;do continue;end;else b=zV;DV=3;end;end;else(kV)[1]=lV;DV=8;continue;end;end;else do if not(DV<=4)then if DV==5 then function UV()local qp,hp=1,(nil);while qp~=2 do if qp==0 then hp={};qp=2;continue;else qp=0X0;end;end;qp=2;local xp,Vp,Yp,Wp=nil,nil,nil,nil;do while qp<=0X3 do if qp<=1 then if qp==0X00 then Yp=xp[0X6];qp=3;else Vp={};do qp=0X0;end;continue;end;else do if qp==0X2 then xp={{},nil,{},dV,nil,{},nil,nil,dV};qp=0X001;continue;else Wp=1;do qp=4;end;end;end;end;end;end;local Zp,Ip=nil,nil;for B9=0X0,0X0002 do if not(B9<=0X00)then do if B9==1 then do Ip={};end;continue;else do for Gm=0X1,Zp do(Yp)[Gm]={[0X7]='5\089',[RV]=N(),[3]=0.5904629482633845,[5]=-0X7a744b86,[0x0001]=317272811,[0X07]=jV,[2]=r(),[3]=0X0000B1Ae7b,[0X5]=C(),[7]=C(),[0X4]=C(),[3]=N(),[1]=N()};end;end;end;end;else Zp=J()-72413;end;end;xp[0x8]=r();xp[12]=N();local yp=xp[1];local ap=(nil);for iX=0,0X3 do do if not(iX<=1)then if iX~=2 then xp[0X4]=r();else xp[17]=N();do continue;end;end;else if iX~=0X00 then do for il=0,ap-0X1 do yp[il]=UV();end;end;else do ap=J()-0X8f00;end;continue;end;end;end;end;qp=1;repeat if not(qp<=0X0)then if qp~=0X001 then for kU=1,r()do(Ip)[kU]={N(),r()};end;qp=0X03;else(xp)[0X000012]=N();qp=0X0000;do continue;end;end;else(xp)[0X5]=Ip;qp=0X2;continue;end;until qp>0X2;(xp)[12]=J();local vp,Qp=nil,(nil);for BQ=0,2 do if BQ<=0 then do xp[0X02]=r();end;do continue;end;else if BQ~=0X1 then do Qp=N();end;else vp=J()-0xCB64;continue;end;end;end;local pp,rp=nil,nil;for Uv=0X0,6 do if Uv<=0X2 then do if Uv<=0X0 then pp=N()~=0x0;continue;else if Uv==1 then do for mf=1,vp do local Ff=(N());local Rf,uf=nil,0;local xf=(nil);while uf<=2 do if not(uf<=0)then if uf~=0X1 then if Ff==143 then Rf=jV;elseif Ff==0xA then do Rf=U(pV(Qp),N());end;elseif Ff==0X0000a2 then Rf=e();elseif Ff==wV then Rf=KV;elseif Ff==22 then Rf=J();elseif Ff==232 then Rf=U(pV(Qp),0X8);elseif Ff==BV then Rf=D();elseif Ff==MV then do Rf=U(pV(Qp),0x0002);end;elseif Ff==90 then Rf=U(pV(Qp),0X8);end;uf=0x1;else xf={Rf,{}};uf=3;do continue;end;end;else(Vp)[mf-0X01]=Wp;do uf=0X2;end;continue;end;end;hp[Wp]=xf;do Wp=Wp+0X1;end;if not(pp)then else local f4=(0X0);while(true)do if f4~=0 then do XV=XV+1;end;break;else lV[XV]=xf;do f4=0X001;end;end;end;end;end;end;else do for bH=0X01,Zp do local LH=(xp[0X6][bH]);for HI,fI in ipairs(E)do local vI,bI,jI=0x1,nil,(nil);do repeat if not(vI<=0x0)then if vI~=1 then jI=LH[bI];vI=0X0;else bI=t[fI];vI=0X02;end;else if jI==15 then local IN,zN=nil,(nil);local DN=1;while DN<=0X2 do do if DN<=0 then do if not(zN)then else local fk=nil;local vk=(0X1);while vk~=3 do if vk<=0X0 then fk[#fk+uV]={LH,bI};do vk=0X003;end;continue;else if vk~=1 then fk=zN[2];do vk=0x0;end;else(LH)[bI]=zN[0x1];vk=0X2;do continue;end;end;end;end;end;end;DN=0X3;else if DN==1 then do IN=Vp[LH[fI]];end;DN=0X2;do continue;end;else zN=hp[IN];DN=0X0;continue;end;end;end;end;elseif jI==0X2 then do(LH)[fI]=bH+LH[fI]+0x1;end;end;vI=3;end;until vI>=3;end;end;end;end;end;end;end;else if Uv<=4 then if Uv~=3 then(xp)[7]=M(rp,1,0X1)~=0X0;else rp=N();end;else if Uv~=5 then return xp;else do xp[0X9]=M(rp,2,0X1)~=0;end;do continue;end;end;end;end;end;end;do DV=6;end;continue;else oV=UV();DV=0X0;end;else do if DV~=0X3 then function gV(Da,ia,Ya)local Ta=(ia[7]);local ma,Ra=ia[0X4],ia[0x8];local ya,za=ia[0X6],(ia[1]);local Qa,ra=ia[0X9],ia[0X02];local xa=(ia[3]);local Ia=(m({},{__mode='v'}));local Pa=(nil);Pa=function(...)local Eq=1;local Qq=({});local Tq={[2]=Qq,[0X0001]=ia};local fq=S();local Kq,Jq=YV(...);local Yq=((fq==F and Ya or fq));Kq=Kq-1;for Ah=0x00000,Kq do do if ma>Ah then do Qq[Ah]=Jq[Ah+1];end;else break;end;end;end;local Vq=(0);if not Ta then Jq=nil;elseif Qa then do(Qq)[ma]={n=Kq>=ma and Kq-ma+1 or 0,R(Jq,ma+0X1,Kq+0X001)};end;end;if Yq==fq then else(j)(Pa,Yq);end;while true do local DF=ya[Eq];local SF=(DF[2]);Eq=Eq+0X1;if not(SF<47)then if SF<0X46 then if SF>=0x3a then if not(SF<0X40)then if not(SF>=0X0043)then if SF>=0x00041 then do if SF==66 then if Qq[DF[0X04]]~=DF[3]then else Eq=DF[5];end;else(Qq)[DF[0X5]]=a(Qq[DF[4]],Qq[DF[7]]);end;end;else(Qq)[DF[0x0005]]=f(Qq[DF[4]]);end;else if SF<0X44 then for jd=DF[5],DF[0X4]do(Qq)[jd]=nil;end;else if SF==69 then local dl=(DF[0X4]);local yl=(DF[5]);Vq=yl+dl-1;repeat local c3,t3=Ia,Qq;if not(#c3>0x0)then else local MO=({});for Yx,Rx in W,c3 do for VE,tE in W,Rx do if not(tE[0X0001]==t3 and tE[2]>=0X0)then else local J5=(tE[0x2]);if not MO[J5]then MO[J5]={t3[J5]};end;tE[1]=MO[J5];do tE[2]=1;end;end;end;end;end;until true;return Qq[yl](R(Qq,yl+1,Vq));else(Qq[DF[5]])[DF[1]]=DF[0X3];end;end;end;else if not(SF>=0X3D)then do if SF<59 then Qq[DF[0X005]]=Qq[DF[4]]^Qq[DF[0x00007]];else if SF==0X3C then local D5,y5=DF[0x5],Qq[DF[0X00004]];Qq[D5+0X00001]=y5;(Qq)[D5]=y5[DF[3]];else Qq[DF[0X00005]]=Qq[DF[0x4]]~=DF[3];end;end;end;else do if SF>=62 then if SF==0X3F then if DF[7]~=0XED then repeat local nn,Ln=Ia,(Qq);do if#nn>0x0 then local QQ={};do for MY,dY in W,nn do for w0,d0 in W,dY do if d0[1]==Ln and d0[2]>=0 then local rc=(d0[2]);if not(not QQ[rc])then else QQ[rc]={Ln[rc]};end;d0[0X00001]=QQ[rc];d0[0x002]=0x1;end;end;end;end;end;end;until true;local H7=DF[5];return R(Qq,H7,H7+DF[4]-2);else Eq=Eq-0X1;ya[Eq]={[0X00005]=(DF[0X5]-184),[4]=(DF[4]-0XB8),[2]=7};end;else do(Qq)[DF[5]]=Yq[DF[1]];end;end;else Qq[DF[5]]=Qq[DF[4]]+Qq[DF[0x00007]];end;end;end;end;else do if SF>=0X34 then if not(SF<55)then do if not(SF>=0X00038)then do if DF[0X7]==92 then Eq=Eq-0X1;do(ya)[Eq]={[0X02]=21,[0X5]=(DF[5]-0x63),[0x4]=(DF[4]-99)};end;else local HA=DF[0X0005];for xn=HA,HA+(DF[0X4]-0X00001)do do(Qq)[xn]=Jq[ma+(xn-HA)+1];end;end;end;end;else do if SF~=0X39 then(Tq)[DF[4]]=Qq[DF[5]];else if Qq[DF[0X04]]~=Qq[DF[0X00007]]then Eq=DF[5];end;end;end;end;end;else if SF<0x00035 then Qq[DF[0X5]]=DF[1];else if SF~=54 then(Qq[DF[0X5]])[Qq[DF[4]]]=DF[0X3];else if not(not(Qq[DF[4]]<Qq[DF[7]]))then else Eq=DF[0X5];end;end;end;end;else if not(SF>=49)then if SF==48 then(Qq)[DF[5]]={};else do repeat local Xq,Nq=Ia,Qq;if#Xq>0X0 then local ht=({});for f5,U5 in W,Xq do do for x8,c8 in W,U5 do do if c8[1]==Nq and c8[0x2]>=0 then local WF=c8[2];if not ht[WF]then ht[WF]={Nq[WF]};end;do c8[0X001]=ht[WF];end;(c8)[2]=0x1;end;end;end;end;end;end;until true;end;local zq=(DF[5]);do return Qq[zq](R(Qq,zq+1,Vq));end;end;else if not(SF<50)then if SF==51 then local KD=DF[5];Vq=KD+DF[4]-0x1;Qq[KD]=Qq[KD](R(Qq,KD+1,Vq));Vq=KD;else local ud=DF[5];local Kd=(s(function(...)h();for Qu,iu,Du,vu,Eu,ju,ou,Gu,Fu,xu in...do(h)(true,{Qu,iu,Du,vu,Eu,ju,ou,Gu,Fu,xu});end;end));Kd(Qq[ud],Qq[ud+0X0001],Qq[ud+2]);Vq=ud;do(Qq)[ud]=Kd;end;do Eq=DF[0x04];end;end;else(Qq)[DF[5]]=Qq[DF[4]]/Qq[DF[7]];end;end;end;end;end;else if SF<0X52 then if SF>=0X004C then if SF>=0X4f then do if not(SF<0x000050)then if SF~=0X51 then local Dr,lr=DF[0X5],(DF[0X00007]-0X1)*50;local Nr=(Qq[Dr]);for Er=0X0001,Vq-Dr do Nr[lr+Er]=Qq[Dr+Er];end;else if DF[7]~=70 then do if not(Qq[DF[0x05]])then else Eq=DF[0X004];end;end;else do Eq=Eq-1;end;(ya)[Eq]={[5]=(DF[0X5]-169),[2]=0x47,[4]=(DF[0X00004]-0Xa9)};end;end;else local Jl=(DF[0X5]);local kl,Xl=Qq[Jl]();if kl then for WT=0X001,DF[7]do(Qq)[Jl+WT]=Xl[WT];end;do Eq=DF[0X4];end;end;end;end;else if not(SF>=77)then Qq[DF[0X5]]=G(Qq[DF[0x4]],Qq[DF[7]]);else if SF==0x4E then(Qq)[DF[0X0005]]=Qq[DF[4]]<=Qq[DF[0x7]];else(Qq)[DF[5]]=not Qq[DF[4]];end;end;end;else do if not(SF<73)then do if SF<0x04a then do if Qq[DF[0X4]]==DF[0x3]then else Eq=DF[0x00005];end;end;else if SF==0x4B then local EA=(DF[5]);local JA=Qq[EA];local uA=Qq[EA+0X0002];local iA=Qq[EA+1];(Qq)[EA]=s(function()for l7=JA,iA,uA do h(true,l7);end;end);Eq=DF[0X4];else local Yx=DF[5];Qq[Yx]=Qq[Yx](R(Qq,Yx+0X001,Vq));do Vq=Yx;end;end;end;end;else do if SF>=0X0047 then if SF==72 then repeat local cL,BL=Ia,(Qq);do if#cL>0 then local Ik=({});for M2,a2 in W,cL do for uc,kc in W,a2 do do if not(kc[0x1]==BL and kc[2]>=0X0)then else local Qf=(kc[2]);if not(not Ik[Qf])then else Ik[Qf]={BL[Qf]};end;do kc[1]=Ik[Qf];end;do kc[2]=1;end;end;end;end;end;end;end;until true;do return R(Qq,DF[5],Vq);end;else(Qq)[DF[0x5]]=Qq[DF[4]];end;else Qq[DF[5]]=Qq[DF[4]]>=Qq[DF[7]];end;end;end;end;end;else if not(SF<88)then do if SF>=0X005B then do if SF<92 then Qq[DF[5]]=Tq[DF[4]];else if SF==0X5d then(Qq)[DF[5]]=false;else local tH=(DF[0X5]);local fH,BH=Qq[tH],(DF[7]-0X001)*50;for od=1,DF[4]do(fH)[BH+od]=Qq[tH+od];end;end;end;end;else if SF>=0X59 then if SF==0X005A then local cH=DF[5];(Qq[cH])(R(Qq,cH+0X01,Vq));Vq=cH-0X1;else local Dj=(DF[0X005]);local Kj,Vj,Ej=Qq[Dj]();do if Kj then(Qq)[Dj+1]=Vj;(Qq)[Dj+0X00002]=Ej;Eq=DF[0X0004];end;end;end;else do(Qq)[DF[0X05]]=DF[0X1];end;end;end;end;else if not(SF>=85)then if SF>=83 then do if SF==0x54 then(Qq)[DF[0x00005]]=Qq[DF[4]]<Qq[DF[0X0007]];else Qq[DF[5]]=true;end;end;else do repeat local Ab,lb=Ia,(Qq);if not(#Ab>0)then else local qY=({});do for ES,HS in W,Ab do for d8,D8 in W,HS do if not(D8[1]==lb and D8[0x002]>=0X0)then else local dE=D8[2];do if not(not qY[dE])then else qY[dE]={lb[dE]};end;end;D8[1]=qY[dE];(D8)[0x2]=1;end;end;end;end;end;until true;end;do return;end;end;else do if SF<86 then do Vq=DF[5];end;(Qq)[Vq]=Qq[Vq]();else if SF~=87 then local fk=(DF[0X5]);Qq[fk](Qq[fk+1],Qq[fk+2]);Vq=fk-1;else Eq=DF[0x4];end;end;end;end;end;end;end;else if not(SF>=0X17)then if not(SF>=0x000b)then if not(SF<5)then do if SF>=8 then if not(SF<9)then if SF~=0XA then local pG=(za[DF[4]]);local BG,cG=pG[5],nil;local xG=(#BG);do if xG>0x0 then cG={};for Ai=1,xG do local fi=(BG[Ai]);if fi[0X1]==0X0 then do cG[Ai-1]={Qq,fi[2]};end;else cG[Ai-1]=Da[fi[2]];end;end;(H)(Ia,cG);end;end;do Qq[DF[0X5]]=gV(cG,pG,Yq);end;else Qq[DF[0x5]]=x(Qq[DF[0X4]],Qq[DF[0X00007]]);end;else(Qq)[DF[5]]=A(Qq[DF[0X004]],Qq[DF[7]]);end;else if not(SF>=0X06)then local eO=DF[0X5];local uO=s(function(...)h();for iK,aK in...do h(true,iK,aK);end;end);(uO)(Qq[eO],Qq[eO+1],Qq[eO+2]);Vq=eO;do(Qq)[eO]=uO;end;do Eq=DF[4];end;else if SF==0X7 then Qq[DF[0X5]]=#Qq[DF[4]];else do Qq[DF[0X5]]=T(Qq[DF[0X04]],Qq[DF[7]]);end;end;end;end;end;else if not(SF<2)then if not(SF>=0x3)then(Qq)[DF[0x5]]=Qq[DF[0X0004]][Qq[DF[0X7]]];else if SF==0X4 then(Qq)[DF[0x05]]=Qq[DF[4]]==Qq[DF[0X7]];else do if not(not(Qq[DF[4]]<=Qq[DF[0X7]]))then else Eq=DF[5];end;end;end;end;else if SF~=1 then Vq=DF[0X00005];(Qq[Vq])();do Vq=Vq-0x0001;end;else do kV[DF[4]]=Qq[DF[0X0005]];end;end;end;end;else do if SF<17 then do if SF>=14 then if not(SF<15)then if SF~=16 then local Sl=DF[0X005];local il=s(function(...)(h)();for Nc in...do h(true,Nc);end;end);il(Qq[Sl],Qq[Sl+1],Qq[Sl+2]);do Vq=Sl;end;(Qq)[Sl]=il;Eq=DF[0X4];else local lE=DF[5];(Qq)[lE]=Qq[lE](Qq[lE+0X1]);Vq=lE;end;else local ri=DF[5];(Qq)[ri]=Qq[ri](Qq[ri+1],Qq[ri+0X0002]);Vq=ri;end;else if not(SF>=0XC)then local Ps=(DF[4]);(Qq)[DF[0X5]]=Qq[Ps]..Qq[Ps+1];else if SF==0X00D then repeat local Uu,zu=Ia,Qq;if not(#Uu>0)then else local Mq={};for PC,YC in W,Uu do do for el,nl in W,YC do if nl[0x001]==zu and nl[0x00002]>=0 then local v5=(nl[0X0002]);if not Mq[v5]then Mq[v5]={zu[v5]};end;(nl)[1]=Mq[v5];(nl)[2]=0X1;end;end;end;end;end;until true;do return Qq[DF[0X5]]();end;else local GB,KB=DF[5],(Kq-ma);if KB<0 then KB=-0x1;end;for Aj=GB,GB+KB do do(Qq)[Aj]=Jq[ma+(Aj-GB)+1];end;end;Vq=GB+KB;end;end;end;end;else if SF>=0X14 then if SF>=21 then if SF~=0X0016 then(Qq)[DF[5]]=nil;else(Qq)[DF[5]]=Qq[DF[4]]%Qq[DF[0X7]];end;else Yq[DF[0X00001]]=Qq[DF[0X0005]];end;else do if SF<18 then(Qq)[DF[5]]=Qq[DF[0X4]]-Qq[DF[7]];else do if SF~=19 then do if not Qq[DF[0X05]]then Eq=DF[0x4];end;end;else Qq[DF[0X5]]={R({},0x1,DF[0X4])};end;end;end;end;end;end;end;end;else do if SF>=35 then if SF>=0X0029 then if SF>=0X0002C then if SF<45 then(Qq)[DF[0X5]]=kV[DF[4]];else if SF~=0X2e then do Qq[DF[0x05]]=Qq[DF[4]]~=Qq[DF[0X0007]];end;else Qq[DF[5]]=Qq[DF[0X4]]*Qq[DF[0x007]];end;end;else do if not(SF<42)then if SF==43 then if Qq[DF[0X4]]<Qq[DF[0x7]]then Eq=DF[5];end;else local h3=(Da[DF[4]]);(Qq)[DF[0X5]]=h3[1][h3[2]];end;else Qq[DF[5]]=Qq[DF[4]]%DF[0X03];end;end;end;else do if SF<0x26 then do if not(SF>=36)then do if Qq[DF[0x04]]==Qq[DF[0X7]]then Eq=DF[5];end;end;else if SF~=0x25 then local z3=DF[0X05];Vq=z3+DF[0x04]-1;Qq[z3](R(Qq,z3+0X1,Vq));Vq=z3-1;else local Re=(Qq[DF[0X4]]/Qq[DF[0X7]]);Qq[DF[0X5]]=Re-Re%0X1;end;end;end;else if SF<0X27 then local rf=DF[5];(Qq[rf])(Qq[rf+0X001]);do Vq=rf-1;end;else if SF==0X028 then if not(Qq[DF[0X00004]]<=Qq[DF[0x7]])then else do Eq=DF[0X05];end;end;else local z5=DF[5];local r5,p5=Qq[z5]();do if not(r5)then else Eq=DF[4];(Qq)[z5+3]=p5;end;end;end;end;end;end;end;else if not(SF<0X1D)then if SF>=32 then if SF<33 then Qq[DF[0x5]]=Qq[DF[4]][DF[0X3]];else if SF==34 then if not(Qq[DF[0X4]]<=DF[0X3])then Eq=DF[0X5];end;else if DF[7]==0X89 then Eq=Eq-0X0001;(ya)[Eq]={[0X0004]=(DF[0x04]-0X000087),[2]=26,[5]=(DF[5]-135)};else repeat local ee,qe,Le=Ia,Qq,DF[0X5];if not(#ee>0X0)then else local Ch={};for uM,OM in W,ee do for QK,eK in W,OM do if eK[1]==qe and eK[2]>=Le then local fu=eK[2];do if not Ch[fu]then(Ch)[fu]={qe[fu]};end;end;(eK)[0X1]=Ch[fu];do(eK)[0x2]=1;end;end;end;end;end;until true;end;end;end;else if not(SF>=0X1e)then repeat local F0,S0=Ia,Qq;do if#F0>0X0000 then local TW=({});for YW,SW in W,F0 do for BU,nU in W,SW do do if not(nU[1]==S0 and nU[2]>=0X0)then else local cC=nU[2];if not TW[cC]then(TW)[cC]={S0[cC]};end;(nU)[0X001]=TW[cC];(nU)[0X2]=1;end;end;end;end;end;end;until true;return Qq[DF[0X5]];else do if SF==31 then local lT=Da[DF[4]];lT[0x1][lT[0X02]]=Qq[DF[0x0005]];else do Qq[DF[0X5]]=Qq[DF[4]]>Qq[DF[0X7]];end;end;end;end;end;else if not(SF>=26)then if SF<24 then do Qq[DF[5]][DF[0X00001]]=Qq[DF[0X7]];end;else if SF==25 then(Qq[DF[0X5]])[Qq[DF[0x00004]]]=Qq[DF[0X00007]];else local ln=(DF[5]);local Gn,En=Qq[ln]();if Gn then(Qq)[ln+0x1]=En;Eq=DF[4];end;end;end;else if not(SF<0X1B)then if SF~=0X1c then local zP,tP=DF[5],(DF[0x04]);if tP~=0 then Vq=zP+tP-0x001;end;local sP,pP,YP=DF[0x007],nil,nil;if tP~=0X1 then pP,YP=YV(Qq[zP](R(Qq,zP+1,Vq)));else pP,YP=YV(Qq[zP]());end;do if sP~=0X00001 then if sP==0x000 then pP=pP+zP-1;Vq=pP;else pP=zP+sP-0X2;Vq=pP+1;end;local nb=0;for mf=zP,pP do do nb=nb+1;end;(Qq)[mf]=YP[nb];end;else Vq=zP-1;end;end;else local Ql=(DF[0X4]);local pl=(Qq[Ql]);for jL=Ql+1,DF[7]do pl=pl..Qq[jL];end;(Qq)[DF[5]]=pl;end;else do(Qq)[DF[5]]=-Qq[DF[0X04]];end;end;end;end;end;end;end;end;end;end;(j)(Pa,Ya);return Pa;end;do DV=0X05;end;else E={0X4,7,0X5};do DV=0XD;end;continue;end;end;end;end;end;end;else if DV<=9 then do if not(DV<=7)then if DV~=0X8 then XV=0X1;DV=0Xc;else lV=dV;DV=7;end;else return gV(nil,oV,F)(...);end;end;else do if not(DV<=0x00B)then if DV==12 then pV=function(j2)local U2=J();local R2,y2="",1;while(true)do if not(y2<=0)then if y2~=1 then c=c+U2;y2=0X00000;continue;else for th=0x001,U2,7997 do local Rh=0x00;local Qh=nil;do while Rh<=1 do if Rh~=0x0 then do if not(Qh>U2)then else do Qh=U2;end;end;end;Rh=0X2;continue;else Qh=th+7997-uV;Rh=0X1;do continue;end;end;end;end;local kh={o(I,c+th-0X1,c+Qh-0X00001)};for bn=0x01,#kh do kh[bn]=T(kh[bn],O);O=(j2*O+255)%256;end;do R2=R2..Z(R(kh));end;end;y2=0X02;continue;end;else return R2;end;end;end;DV=1;continue;else YV=function(...)do return p("#",...),{...};end;end;DV=9;continue;end;else if DV~=0x0000a then do kV={};end;do DV=2;end;continue;else bV=function(wG)local HG,CG,kG,BG,YG=0,nil,nil,nil,nil;while HG<4 do if not(HG<=1)then do if HG==2 then YG=T(CG[3],VV);HG=4;continue;else kG=T(CG[1],VV);do HG=1;end;continue;end;end;else if HG~=0 then BG=T(CG[2],VV);do HG=2;end;else do CG={o(I,c,c+0x3)};end;HG=0x003;continue;end;end;end;local oG=T(CG[0X4],VV);HG=0x0;repeat if HG~=0X00000 then do c=c+0X0004;end;HG=2;continue;else VV=(129*VV+wG)%256;HG=0X1;continue;end;until HG>0X1;return oG*16777216+YG*0X000010000+BG*0X100+kG;end;DV=11;continue;end;end;end;end;end;until false;end)(string.char,tostring,bit32.rshift,getfenv,bit32.bxor,select,string.sub,36,true,pcall,string.rep,assert,1,rawset,coroutine.wrap,bit32,nil,tonumber,0X3,"",type,0X0,0X6,0X99,bit32.bor,0XF0,string,next,false,{0X0007f17,0X0D8BE03f4,730414432,0X36D5f191,0Xcf916649,0Xe789731,1289930229,0XC25AfDeD,2081359860},...);
